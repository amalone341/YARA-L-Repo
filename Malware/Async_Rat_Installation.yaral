rule Async_Rat_checker {
  meta:
    // Based off of the source code for the ASYNC rat along with the article writeup below, may want to duplicate rule for admin/no admin installations
    // https://eln0ty.github.io/malware%20analysis/asyncRAT/
    // License: https://github.com/amalone341/YARA-L-Work/blob/main/LICENSE
    author = "Andy Malone"
    status = "Experimental"
    description = "rule to check for Async rat installation"
    severity = "HIGH"

  events:
    $p1.metadata.event_type = "FILE_CREATION"
    $p1.target.file.full_path = /.*appdata.*temp.*\.bat.*/ nocase
    $p1.principal.hostname = $hst

    $p2.metadata.event_type = "PROCESS_LAUNCH"
    ($p2.target.process.file.full_path = /.*appdata.*temp.*\.bat.*/ nocase or
     $p2.principal.process.command_line = /.*appdata.*temp.*\.bat.*/ nocase)
    $p2.principal.hostname = $hst

    // Rat already has admin
    //$p3.metadata.event_type = "PROCESS_LAUNCH"
    //$p3.principal.process.command_line = /.*schtasks \/create.*onlogon.*exit.*/ nocase 
    //$p3.principal.hostname = $hst

    // No Admin for Rat
    $p4.metadata.event_type = "REGISTRY_MODIFICATION"
    $p4.target.registry.registry_key = /.*Software\\Microsoft\\Windows\\CurrentVersion\\Run.*/
    $p4.principal.hostname = $hst

  match:
    $hst over 5m after $p1

  condition:
    $p1 and $p2 and $p4
}
